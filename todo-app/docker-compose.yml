services:
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
  app:
    image: hello-front-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5000:80
    container_name: hello-front-dev # This will name the container hello-front-dev
  server:
    image: hello-back-dev
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-backend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    container_name: hello-back-dev # This will name the container hello-front-dev
    environment: 
      - REDIS_URL=//hello-back-dev-redis:6379
      - MONGO_URL=mongodb://hello-back-dev-mongo:27017/the_database 
    depends_on:
      - redis
      - mongo
  mongo:
    image: mongo:latest
    container_name: hello-back-dev-mongo
    restart: always
    ports:
     - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo_data:/data/db
  redis:
    container_name: hello-back-dev-redis
    image: redis:alpine
    command: redis-server
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
    ports:
      - 6379:6379
